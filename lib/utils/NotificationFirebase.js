var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _app=_interopRequireDefault(require("firebase/app"));require("firebase/messaging");require("firebase/firestore");var notification=function notification(uid){var messaging;return _regenerator.default.async(function notification$(_context){while(1){switch(_context.prev=_context.next){case 0:try{messaging=_app.default.messaging();Notification.requestPermission().then(function(){var token=messaging.getToken({vapidKey:'BM7blrW3tiAfXuqOTw4IpbMrLNlCH7ljFlE9EDMkPqevXuUWByJb57RW6Gz4dtbBnZ884QCCn_8jICxKmq0YE3A'}).then(function(currentToken){if(currentToken){console.log('currentToken:['+currentToken+']');setData(currentToken,uid);}else{console.log('No registration token available. Request permission to generate one.');}}).catch(function(err){console.log('An error occurred while retrieving token. ',err);});console.log('TOKEN'+token);return token;});messaging.onMessage(function(payload){console.log("payload");console.log(payload);});}catch(error){console.error("Error al enviar notificacion: ",error);}case 1:case"end":return _context.stop();}}},null,null,null,Promise);};var setData=function setData(t,UID){var firestore,data;return _regenerator.default.async(function setData$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:firestore=_app.default.firestore();data={userId:UID,token:t};firestore.collection('FMC_Tokens').doc(UID).set(data).then(function(docRef){console.log("Se ha escrito en: "+docRef);}).catch(function(e){console.log("Error adding: "+e);});case 3:case"end":return _context2.stop();}}},null,null,null,Promise);};var _default=notification;exports.default=_default;